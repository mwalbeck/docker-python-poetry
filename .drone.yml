---
kind: pipeline
name: lint
steps:
- commands:
  - hadolint --version
  - hadolint */Dockerfile
  image: hadolint/hadolint:latest-debian
  name: Lint Dockerfiles
  pull: if-not-exists
trigger:
  event:
  - pull_request
  - push
  ref:
    exclude:
    - refs/heads/renovate/*
type: docker
---
depends_on:
- lint
kind: pipeline
name: test_3-7
steps:
- image: plugins/docker
  name: build test
  pull: if-not-exists
  settings:
    dockerfile: 3.7/Dockerfile
    dry_run: "true"
    password:
      from_secret: dockerhub_password_ro
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
trigger:
  event:
  - pull_request
type: docker
---
depends_on:
- lint
kind: pipeline
name: test_3-8
steps:
- image: plugins/docker
  name: build test
  pull: if-not-exists
  settings:
    dockerfile: 3.8/Dockerfile
    dry_run: "true"
    password:
      from_secret: dockerhub_password_ro
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
trigger:
  event:
  - pull_request
type: docker
---
depends_on:
- lint
kind: pipeline
name: test_3-9
steps:
- image: plugins/docker
  name: build test
  pull: if-not-exists
  settings:
    dockerfile: 3.9/Dockerfile
    dry_run: "true"
    password:
      from_secret: dockerhub_password_ro
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
trigger:
  event:
  - pull_request
type: docker
---
depends_on:
- lint
kind: pipeline
name: test_3-10
steps:
- image: plugins/docker
  name: build test
  pull: if-not-exists
  settings:
    dockerfile: 3.10/Dockerfile
    dry_run: "true"
    password:
      from_secret: dockerhub_password_ro
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
trigger:
  event:
  - pull_request
type: docker
---
depends_on:
- lint
kind: pipeline
name: release_3-7
steps:
- environment:
    APP_ENV: "3.7"
    APP_NAME: POETRY
    CUSTOM_TAGS: ""
    DOCKERFILE_PATH: 3.7/Dockerfile
    VERSION_TYPE: docker_env
  image: mwalbeck/determine-docker-tags
  name: determine tags
  pull: if-not-exists
- image: plugins/docker
  name: build and publish
  pull: if-not-exists
  settings:
    dockerfile: 3.7/Dockerfile
    password:
      from_secret: dockerhub_password
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
- image: plugins/matrix
  name: notify
  pull: if-not-exists
  settings:
    homeserver: https://matrix.mwalbeck.org
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    username:
      from_secret: matrix_username
  when:
    status:
    - failure
    - success
trigger:
  branch:
  - master
  event:
  - push
type: docker
---
depends_on:
- lint
kind: pipeline
name: release_3-8
steps:
- environment:
    APP_ENV: "3.8"
    APP_NAME: POETRY
    CUSTOM_TAGS: ""
    DOCKERFILE_PATH: 3.8/Dockerfile
    VERSION_TYPE: docker_env
  image: mwalbeck/determine-docker-tags
  name: determine tags
  pull: if-not-exists
- image: plugins/docker
  name: build and publish
  pull: if-not-exists
  settings:
    dockerfile: 3.8/Dockerfile
    password:
      from_secret: dockerhub_password
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
- image: plugins/matrix
  name: notify
  pull: if-not-exists
  settings:
    homeserver: https://matrix.mwalbeck.org
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    username:
      from_secret: matrix_username
  when:
    status:
    - failure
    - success
trigger:
  branch:
  - master
  event:
  - push
type: docker
---
depends_on:
- lint
kind: pipeline
name: release_3-9
steps:
- environment:
    APP_ENV: "3.9"
    APP_NAME: POETRY
    CUSTOM_TAGS: ""
    DOCKERFILE_PATH: 3.9/Dockerfile
    VERSION_TYPE: docker_env
  image: mwalbeck/determine-docker-tags
  name: determine tags
  pull: if-not-exists
- image: plugins/docker
  name: build and publish
  pull: if-not-exists
  settings:
    dockerfile: 3.9/Dockerfile
    password:
      from_secret: dockerhub_password
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
- image: plugins/matrix
  name: notify
  pull: if-not-exists
  settings:
    homeserver: https://matrix.mwalbeck.org
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    username:
      from_secret: matrix_username
  when:
    status:
    - failure
    - success
trigger:
  branch:
  - master
  event:
  - push
type: docker
---
depends_on:
- lint
kind: pipeline
name: release_3-10
steps:
- environment:
    APP_ENV: "3.10"
    APP_NAME: POETRY
    CUSTOM_TAGS: latest
    DOCKERFILE_PATH: 3.10/Dockerfile
    VERSION_TYPE: docker_env
  image: mwalbeck/determine-docker-tags
  name: determine tags
  pull: if-not-exists
- image: plugins/docker
  name: build and publish
  pull: if-not-exists
  settings:
    dockerfile: 3.10/Dockerfile
    password:
      from_secret: dockerhub_password
    repo: mwalbeck/python-poetry
    username:
      from_secret: dockerhub_username
- image: plugins/matrix
  name: notify
  pull: if-not-exists
  settings:
    homeserver: https://matrix.mwalbeck.org
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    username:
      from_secret: matrix_username
  when:
    status:
    - failure
    - success
trigger:
  branch:
  - master
  event:
  - push
type: docker
---
kind: signature
hmac: 0e55da523c093a8f801fd1fcb6a4a2d3b500b0eb47e7fadca4fb2315c4c303d1

...
