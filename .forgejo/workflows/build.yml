name: Build and publish

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: docker
    steps:
      - uses: actions/checkout@v4
      - uses: https://github.com/hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          recursive: true

  python3_9:
    runs-on: dind
    steps:
      - uses: actions/checkout@v4
      - name: Get docker tags
        id: tags
        shell: sh
        env:
          VERSION_TYPE: "docker_env"
          APP_NAME: "POETRY"
          APP_ENV: "3.9"
          DOCKERFILE_PATH: "3.9/Dockerfile"
          IMAGE_NAME: "mwalbeck/python-poetry"
        run: |
          determine-docker-tags
          dockerd &
      - name: Login to Docker Hub
        uses: https://github.com/docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3
      - name: Build and push
        uses: https://github.com/docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          file: "3.9/Dockerfile"

  python3_10:
    runs-on: dind
    steps:
      - uses: actions/checkout@v4
      - name: Get docker tags
        id: tags
        shell: sh
        env:
          VERSION_TYPE: "docker_env"
          APP_NAME: "POETRY"
          APP_ENV: "3.10"
          DOCKERFILE_PATH: "3.10/Dockerfile"
          IMAGE_NAME: "mwalbeck/python-poetry"
        run: |
          determine-docker-tags
          dockerd &
      - name: Login to Docker Hub
        uses: https://github.com/docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3
      - name: Build and push
        uses: https://github.com/docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          file: "3.10/Dockerfile"

  python3_11:
    runs-on: dind
    steps:
      - uses: actions/checkout@v4
      - name: Get docker tags
        id: tags
        shell: sh
        env:
          VERSION_TYPE: "docker_env"
          APP_NAME: "POETRY"
          APP_ENV: "3.11"
          DOCKERFILE_PATH: "3.11/Dockerfile"
          IMAGE_NAME: "mwalbeck/python-poetry"
        run: |
          determine-docker-tags
          dockerd &
      - name: Login to Docker Hub
        uses: https://github.com/docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3
      - name: Build and push
        uses: https://github.com/docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          file: "3.11/Dockerfile"

  python3_12:
    runs-on: dind
    steps:
      - uses: actions/checkout@v4
      - name: Get docker tags
        id: tags
        shell: sh
        env:
          VERSION_TYPE: "docker_env"
          APP_NAME: "POETRY"
          APP_ENV: "3.12"
          DOCKERFILE_PATH: "3.12/Dockerfile"
          IMAGE_NAME: "mwalbeck/python-poetry"
        run: |
          determine-docker-tags
          dockerd &
      - name: Login to Docker Hub
        uses: https://github.com/docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3
      - name: Build and push
        uses: https://github.com/docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          file: "3.12/Dockerfile"

  python3_13:
    runs-on: dind
    steps:
      - uses: actions/checkout@v4
      - name: Get docker tags
        id: tags
        shell: sh
        env:
          VERSION_TYPE: "docker_env"
          APP_NAME: "POETRY"
          APP_ENV: "3.13"
          DOCKERFILE_PATH: "3.13/Dockerfile"
          IMAGE_NAME: "mwalbeck/python-poetry"
        run: |
          determine-docker-tags
          dockerd &
      - name: Login to Docker Hub
        uses: https://github.com/docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3
      - name: Build and push
        uses: https://github.com/docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          file: "3.13/Dockerfile"